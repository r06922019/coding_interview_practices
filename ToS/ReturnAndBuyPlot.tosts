# https://usethinkscript.com/threads/how-to-import-existing-thinkscript-code-on-thinkorswim.10/
input price = close;
input shortLength = 5;
input midLength = 20;
input longLength = 60;
input displace = 0;
input showBreakoutSignals = yes;

# colors https://tlc.thinkorswim.com/center/reference/thinkScript/Functions/Look---Feel/GetColor
plot AvgExpShort = Average(price[-displace], shortLength);
AvgExpShort.SetDefaultColor(GetColor(1)); # cyan
AvgExpShort.SetLineWeight(3);

plot AvgExpMid = ExpAverage(price[-displace], midLength);
AvgExpMid.SetDefaultColor(GetColor(4)); # yellow
AvgExpMid.SetLineWeight(3);

plot AvgExpLong = ExpAverage(price[-displace], longLength);
AvgExpLong.SetDefaultColor(GetColor(0)); # purple
AvgExpLong.SetLineWeight(3);

def avgsRising = AvgExpShort > AvgExpShort[1] and AvgExpMid > AvgExpMid[1] and AvgExpLong > AvgExpLong[1];
def avgsInOrder = price > AvgExpShort and AvgExpShort > AvgExpMid and AvgExpMid > AvgExpLong;

plot UpSignal = (price crosses above AvgExpShort) and avgsRising and avgsInOrder;

UpSignal.SetHiding(!showBreakoutSignals);
UpSignal.SetDefaultColor(GetColor(8));
UpSignal.SetPaintingStrategy(PaintingStrategy.BOOLEAN_ARROW_UP);
UpSignal.SetLineWeight(5);

plot DownSignal = price crosses below AvgExpShort;
DownSignal.SetHiding(!showBreakoutSignals);
DownSignal.SetDefaultColor(GetColor(8));
DownSignal.SetPaintingStrategy(PaintingStrategy.BOOLEAN_ARROW_DOWN);
DownSignal.SetLineWeight(5);